# This is a basic workflow to help you get started with Actions

name: release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop, release/*]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: info
        run: echo ${{ github.ref }}
      
      - name: checkout
        uses: actions/checkout@v2

      - name: install
        run: sudo apt-get install lua5.1
        
      - name: git
        run: |
          git config --global user.email "aleguna@gmail.com"
          git config --global user.name "Bip Bop"
                
      - name: test
        run: make test
        
      - name: bump_build
        if: github.ref == '/refs/heads/develop'
        run: make bump_build
        
      - name: bump_revision
        if: contains (github.ref, '/refs/heads/release/')
        run: make bump_revision
        
      - name: version
        run: echo "VERSION_TAG=v$(make sversion)" >> $GITHUB_ENV
        
      - name: tag
        run: | 
          git commit filmlog.lrdevplugin/Info.lua -m "Bump build ${{ env.VERSION_TAG }}"
          git tag ${{ env.VERSION_TAG }}
          git push --tags origin
          git push origin
                  
      - name: deliver
        run: make deliver
        
      - name: release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.VERSION_TAG }}
          release_name: Release ${{ env.VERSION_TAG }}
          body: develop release
          draft: true
          prerelease: true
          
      - name: print_url
        run: echo "Release URL ${{ steps.release.html_url }}"
          
      - name: upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }} # This pulls from the release step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./delivery/filmlog.lrplugin-${{ env.VERSION_TAG }}.zip
          asset_name: filmlog.lrplugin-${{ env.VERSION_TAG }}.zip
          asset_content_type: application/zip
          
          
        
      
        
        
      
